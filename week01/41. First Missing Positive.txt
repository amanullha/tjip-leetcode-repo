solution 1:
class Solution {
public:
    int firstMissingPositive(vector<int>& nums) {
        
        unordered_set<int>uniPosNbr(nums.begin(),nums.end());
        
        int smallestNbr=1;
        while(smallestNbr<=uniPosNbr.size()+1){
            
            if(!uniPosNbr.count(smallestNbr)){
                
                return smallestNbr;
            }
            smallestNbr++;
        }
        
        return 0;
    }
};




solution 2: 
class Solution {
public:
    int firstMissingPositive(vector<int>& ar) {
    
    int n=ar.size();
        
    bool gotOne=true;
        
    for(int x: ar)if(x==1)gotOne=false;
        
    if(gotOne)return 1;
    if(n==1)return 2;
        
    for(int &x:ar)if(x>n || x<=0)x=1;
        
        
    for(int i=0;i<n;i++){
        
        int x=abs(ar[i]);
        int idx=x-1;
        if(ar[idx]>=0)ar[idx]*=-1;
    }

    for(int i=0;i<n;i++){
        if(ar[i]>0)return i+1;
    }
            
        
    return n+1;
    }
};