// method 1

/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution
{
public:
    ListNode *addTwoNumbers(ListNode *l1, ListNode *l2)
    {

        if (l1 == NULL)
            return l2;
        if (l2 == NULL)
            return l1;

        ListNode *ans = new ListNode();
        ListNode *head = ans;

        int carry = 0;
        while (l1 != NULL and l2 != NULL)
        {

            int x = l1->val + l2->val + carry;

            l1 = l1->next;
            l2 = l2->next;

            if (x > 9)
            {

                carry = 1;
                ListNode *d = new ListNode(x % 10);
                ans->next = d;
                ans = ans->next;
            }
            else
            {

                carry = 0;
                ListNode *d = new ListNode(x);

                ans->next = d;
                ans = ans->next;
            }
        }

        if (l1 == NULL)
        {

            while (l2 != NULL)
            {

                int x = l2->val + carry;

                if (x > 9)
                {

                    carry = 1;
                    ListNode *d = new ListNode(x % 10);
                    ans->next = d;
                    ans = ans->next;
                }
                else
                {

                    carry = 0;
                    ListNode *d = new ListNode(x);

                    ans->next = d;
                    ans = ans->next;
                }

                l2 = l2->next;
            }
        }
        else if (l2 == NULL)
        {

            while (l1 != NULL)
            {

                int x = l1->val + carry;

                if (x > 9)
                {

                    carry = 1;
                    ListNode *d = new ListNode(x % 10);
                    ans->next = d;
                    ans = ans->next;
                }
                else
                {

                    carry = 0;
                    ListNode *d = new ListNode(x);

                    ans->next = d;
                    ans = ans->next;
                }

                l1 = l1->next;
            }
        }
        if (carry)
        {

            ListNode *dd = new ListNode(1);
            ans->next = dd;
        }

        return head->next;
    }
};

// method 2


/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        
        if(l1==NULL)return l2;
        if(l2==NULL)return l1;
        
        
        ListNode * ans=new ListNode();
        ListNode* head=ans;
        
        
        int carry=0;
        while(l1!=NULL || l2!=NULL){

            int x=l1?l1->val:0;
            int y=l2?l2->val:0;
            
            int d=x+y+carry;
            if(d>9){
                carry=1;
                d=d%10;
            }
            else carry=0;
            
            ans->next=new ListNode(d);
            ans=ans->next;
            
            if(l1)
            l1=l1->next;
            if(l2)
            l2=l2->next;
            
        }
        
        if(carry)ans->next=new ListNode(1);
    
        
        
        
        return head->next;
    }
    

};